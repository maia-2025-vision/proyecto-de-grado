stages:
  patches-512-ol-160-mv01-train:
    cmd: python oficial_herdnet/tools/patcher.py data/train 512 512 160
      data/patches-512-ol-160-m01/train  -csv
      data/groundtruth/csv/train_big_size_A_B_E_K_WH_WB-fixed-header.csv && python
      oficial_herdnet/tools/csv_to_points.py
      -i data/patches-512-ol-160-m01/train/gt.csv -o data/patches-512-ol-160-m01/train_points_gt.csv
    deps:
    - data/groundtruth/csv/train_big_size_A_B_E_K_WH_WB-fixed-header.csv
    - data/train/
    - oficial_herdnet/tools/patcher.py
    outs:
    - data/patches-512-ol-160-m01/train_points_gt.csv
    - data/patches-512-ol-160-m01/train/

  patches-512-ol-160-mv01-val:
    cmd: python oficial_herdnet/tools/patcher.py data/val 512 512 160
      data/patches-512-ol-160-m01/val  -csv
      data/groundtruth/csv/val_big_size_A_B_E_K_WH_WB-fixed-header.csv && python
      oficial_herdnet/tools/csv_to_points.py
      -i data/patches-512-ol-160-m01/val/gt.csv -o data/patches-512-ol-160-m01/val_points_gt.csv
    deps:
    - data/groundtruth/csv/val_big_size_A_B_E_K_WH_WB-fixed-header.csv
    - data/val/
    - oficial_herdnet/tools/patcher.py
    outs:
    - data/patches-512-ol-160-m01/val_points_gt.csv
    - data/patches-512-ol-160-m01/val/

  patches-512-ol-160-mv01-test:
    cmd: python oficial_herdnet/tools/patcher.py data/test 512 512 160
      data/patches-512-ol-160-m01/test  -csv
      data/groundtruth/csv/test_big_size_A_B_E_K_WH_WB-fixed-header.csv && python
      oficial_herdnet/tools/csv_to_points.py
      -i data/patches-512-ol-160-m01/test/gt.csv -o data/patches-512-ol-160-m01/test_points_gt.csv
    deps:
    - data/groundtruth/csv/test_big_size_A_B_E_K_WH_WB-fixed-header.csv
    - data/test/
    - oficial_herdnet/tools/patcher.py
    outs:
    - data/patches-512-ol-160-m01/test_points_gt.csv
    - data/patches-512-ol-160-m01/test/

  train-herdnet-v1:
    cmd: python oficial_herdnet/tools/train.py train.training_settings.work_dir=data/models/herdnet_v1/
    deps:
    - data/patches-512-ol-160-m01/train_points_gt.csv
    - data/patches-512-ol-160-m01/train/
    - data/patches-512-ol-160-m01/val_points_gt.csv
    - data/patches-512-ol-160-m01/val/
    outs:
    - data/models/herdnet_v1/

  desc-herdnet-v1:
    desc: >
      Generate report of number of params per layer of herdnet-v1
      # trainable_backbone_layers=5 for this report (to report all layers)
      # but we trained with just 4 backbone layers
    cmd: >
      python tools/describe_model.py --config-path=$PWD/configs
      test=herdnet
      test.device_name="cpu"
      test.model.pth_file=data/models/herdnet_v1/best_model.pth
      +test.group_depth=2
      +test.results_file=data/model_descs/parameters-herdnet-v1.csv
    deps:
      - tools/describe_model.py
      - oficial_herdnet/configs/test/herdnet.yaml
      - data/models/herdnet_v1/best_model.pth
    outs:
      - data/model_descs/parameters-herdnet-v1.csv

  fix-headers-train-csv:
    cmd: >
      sed '1s/Image,x1,y1,x2,y2,Label/images,x_min,y_min,x_max,y_max,labels/'
      data/groundtruth/csv/train_big_size_A_B_E_K_WH_WB.csv
      > data/gt-preprocessed/csv/train_big_size_A_B_E_K_WH_WB-fixed-header.csv
    deps:
      - data/groundtruth/csv/train_big_size_A_B_E_K_WH_WB.csv
    outs:
      - data/gt-preprocessed/csv/train_big_size_A_B_E_K_WH_WB-fixed-header.csv

  fix-headers-val-csv:
    cmd: >
      sed '1s/Image,x1,y1,x2,y2,Label/images,x_min,y_min,x_max,y_max,labels/'
      data/groundtruth/csv/val_big_size_A_B_E_K_WH_WB.csv
      > data/gt-preprocessed/csv/val_big_size_A_B_E_K_WH_WB-fixed-header.csv
    deps:
      - data/groundtruth/csv/val_big_size_A_B_E_K_WH_WB.csv
    outs:
      - data/gt-preprocessed/csv/val_big_size_A_B_E_K_WH_WB-fixed-header.csv

  fix-headers-test-csv:
    cmd: >
      sed '1s/Image,x1,y1,x2,y2,Label/images,x_min,y_min,x_max,y_max,labels/'
      data/groundtruth/csv/test_big_size_A_B_E_K_WH_WB.csv
      > data/gt-preprocessed/csv/test_big_size_A_B_E_K_WH_WB-fixed-header.csv
    deps:
      - data/groundtruth/csv/test_big_size_A_B_E_K_WH_WB.csv
    outs:
      - data/gt-preprocessed/csv/test_big_size_A_B_E_K_WH_WB-fixed-header.csv

  patches-512-ol-160-mv0.3-train:
    cmd: >
      python oficial_herdnet/tools/patcher.py
      -csv data/gt-preprocessed/csv/train_big_size_A_B_E_K_WH_WB-fixed-header.csv
      -min 0.3
      data/train/
      512 512 160
      data/patches-512-ol-160-m0.3/train
    deps:
      - oficial_herdnet/tools/patcher.py
      - data/train/
      - data/gt-preprocessed/csv/train_big_size_A_B_E_K_WH_WB-fixed-header.csv
    outs:
      - data/patches-512-ol-160-m0.3/train

  patches-512-ol-160-mv0.3-val:
    cmd: >
      python oficial_herdnet/tools/patcher.py
      -csv data/gt-preprocessed/csv/val_big_size_A_B_E_K_WH_WB-fixed-header.csv
      -min 0.3
      data/val/
      512 512 160
      data/patches-512-ol-160-m0.3/val
    deps:
      - oficial_herdnet/tools/patcher.py
      - data/val/
      - data/gt-preprocessed/csv/val_big_size_A_B_E_K_WH_WB-fixed-header.csv
    outs:
      - data/patches-512-ol-160-m0.3/val

  patches-512-ol-160-mv0.3-test:
    cmd: >
      python oficial_herdnet/tools/patcher.py
      -csv data/gt-preprocessed/csv/test_big_size_A_B_E_K_WH_WB-fixed-header.csv
      -min 0.3
      data/test/
      512 512 160
      data/patches-512-ol-160-m0.3/test
    deps:
      - oficial_herdnet/tools/patcher.py
      - data/test/
      - data/gt-preprocessed/csv/test_big_size_A_B_E_K_WH_WB-fixed-header.csv
    outs:
      - data/patches-512-ol-160-m0.3/test/

  patches-512-ol-160-mv0.3-train-tiny:
    desc: Seleccionar un subconjunto diminuto del conjunto de parches de entrenamiento para hacer tests rápidos
      del flujo de train.
    cmd: >
      mkdir -p data/patches-512-ol-160-m0.3/train-tiny && head -n 200 data/patches-512-ol-160-m0.3/train/gt.csv
      > data/patches-512-ol-160-m0.3/train-tiny/gt-head-200.csv
    deps:
      - data/patches-512-ol-160-m0.3/train/gt.csv
    outs:
      - data/patches-512-ol-160-m0.3/train-tiny/gt-head-200.csv

  patches-512-ol-160-mv0.3-valid-tiny:
    desc: Seleccionar un subconjunto diminuto del conjunto de parches de validación para hacer tests rápidos
      del flujo de train.
    cmd: >
      mkdir -p data/patches-512-ol-160-m0.3/val-tiny &&
      head -n 25 data/patches-512-ol-160-m0.3/val/gt.csv
      > data/patches-512-ol-160-m0.3/val-tiny/gt-head-25.csv
    deps:
      - data/patches-512-ol-160-m0.3/val/gt.csv
    outs:
      - data/patches-512-ol-160-m0.3/val-tiny/gt-head-25.csv

  train-faster-rcnn-hn-trainer:
    desc: Entrenar faster-rcnn via trainer from Herdnet/tools/train.py
    cmd: >
       python oficial_herdnet/tools/train.py  --config-path $PWD/configs/
       train=faster_rcnn_herdnet_trainer
       train.training_settings.work_dir=data/models/faster-rcnn/resnet50-100-epochs-tbl4
       train.training_settings.epochs=100
    deps:
      - configs/train/faster_rcnn_herdnet_trainer.yaml
      - oficial_herdnet/tools/train.py
      - data/patches-512-ol-160-m0.3/train/gt.csv
    outs:
      - data/models/faster-rcnn/resnet50-100-epochs-tbl4

  train-faster-rcnn-hn-trainer-tiny:
    desc: >
      Entrenar faster-rcnn via trainer from Herdnet/tools/train.py con datasets mucho mas pequeños para probar
      todo el flujo rápido
    cmd: >
       python oficial_herdnet/tools/train.py  --config-path $PWD/configs/
       train=faster_rcnn_herdnet_trainer
       train.training_settings.work_dir=data/models/faster-rcnn-tiny
       train.training_settings.epochs=3
       train.datasets.train.csv_file=data/patches-512-ol-160-m0.3/train-tiny/gt-head-200.csv
       train.datasets.validate.csv_file=data/patches-512-ol-160-m0.3/val-tiny/gt-head-25.csv
       train.training_settings.print_freq=10
    deps:
      - oficial_herdnet/tools/train.py
      - data/patches-512-ol-160-m0.3/train-tiny/gt-head-200.csv
      - data/patches-512-ol-160-m0.3/val-tiny/gt-head-25.csv
    outs:
      - data/models/faster-rcnn-tiny

  add-info-to-tmp-model:
    desc: >
      Add metadata and transforms to a model that comes from an intermediate epoch.
    cmd: >
      python tools/add_info_to_model.py --config-path $PWD/configs/
      train=faster_rcnn_herdnet_trainer
      add_info.best_model_pth_path=data/models/tmp/faster-rcnn/best_model-by-epoch-70.pth

  test-faster-rcnn-resnet50:
    desc: >
      Ejecutar el script de test sobre el modelo faster-rcnn-resnet50 sobre patches
    # test.sticher=null because we are running over patches of size 512x512
    cmd: >
      python oficial_herdnet/tools/test.py  --config-path $PWD/configs/
      test=faster_rcnn
      test.device_name="cuda"
      test.wandb_mode="online"
      test.wandb_run=test-frcnn-resnet50
      test.model.pth_file=data/models/faster-rcnn/resnet50-100-epochs-tbl4/best_model.pth
      test.model.kwargs.architecture=resnet50
      test.stitcher=null
      test.dataset.csv_file=data/patches-512-ol-160-m0.3/test/gt.csv
      test.dataset.root_dir=data/patches-512-ol-160-m0.3/test/
      test.results_dir=data/test_results/frcnn-resnet50
    deps:
      - ./configs/test/faster_rcnn.yaml
      - data/models/faster-rcnn/resnet50-100-epochs-tbl4
      - data/patches-512-ol-160-m0.3/test/
    outs:
      - data/test_results/frcnn-resnet50

  desc-faster-rcnn-resnet50:
    desc: >
      Generate report of number of params per layer
      # trainable_backbone_layers=5 for this report (to report all layers)
      # but we trained with just 4 backbone layers
    cmd: >
      python tools/describe_model.py --config-path=$PWD/configs
      test=faster_rcnn
      test.device_name="cpu"
      test.model.kwargs.architecture=resnet50
      test.model.kwargs.trainable_backbone_layers=4
      test.model.pth_file=data/models/faster-rcnn/resnet50-100-epochs-tbl4/best_model.pth
      +test.group_depth=2
      +test.results_file=data/model_descs/parameters-frcnn-resnet-50.csv

    deps:
      - tools/describe_model.py
      - ./configs/test/faster_rcnn.yaml
      - data/models/faster-rcnn/resnet50-100-epochs-tbl4
    outs:
      - data/model_descs/parameters-frcnn-resnet-50.csv

  test-faster-rcnn-resnet50-full:
    desc: >
      Ejecutar el script de test sobre el modelo faster-rcnn-resnet50 sobre imágenes full.
    # Como las imágenes tienen tamaños diversos hay que poner test.datasetbatch_size=1
    cmd: >
      python oficial_herdnet/tools/test.py  --config-path $PWD/configs/
      test=faster_rcnn
      test.device_name="cuda"
      test.wandb_mode="online"
      test.dataset.batch_size=1
      test.wandb_run=test-frcnn-resnet50
      test.model.pth_file=data/models/faster-rcnn/resnet50-100-epochs-tbl4/best_model.pth
      test.model.kwargs.architecture=resnet50
      test.dataset.csv_file=data/gt-preprocessed/csv/test_big_size_A_B_E_K_WH_WB-fixed-header.csv
      test.dataset.root_dir=data/test/
      test.results_dir=data/test_results/frcnn-resnet50-full-imgs
    deps:
      - ./configs/test/faster_rcnn.yaml
      - data/models/faster-rcnn/resnet50-100-epochs-tbl4
      - data/test/
    outs:
      - data/test_results/frcnn-resnet50-full-imgs
